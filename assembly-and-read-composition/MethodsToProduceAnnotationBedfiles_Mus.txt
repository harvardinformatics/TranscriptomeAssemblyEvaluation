Bed files for various functional compartments are generated by
converting the gtf annotation file to a bed (simple awk manipulation),
the using a combination of awk and provided python scripts. Below
are notes on specific details for criteria for classifying bed file
entries, and particular python script implementations in specific cases.

CDS DEFINITION:
  CDS in 8th column
  transcript_biotype = protein_coding
  includes protein coding transcripts of genes with gene biotype = polymorphic pseudogene

UNFILTERED NONCODING:
We exclude entries that are "gene" in 8th column so can use transcript biotype info and keep the following biotypes,

transcribed_processed_pseudogene
 pseudogene
 non_stop_decay
 ribozyme
 translated_processed_pseudogene
 unitary_pseudogene
 scaRNA
 polymorphic_pseudogene
 IG_C_gene
 IG_C_pseudogene
 IG_J_gene
 IG_D_gene
 IG_D_pseudogene
 IG_V_pseudogene
 IG_V_gene
 IG_LV_gene
 TR_V_gene
 TR_J_gene
 TR_C_gene
 TR_V_pseudogene
 TR_D_gene
 TR_J_pseudogene
 sRNA
 macro_lncRNA
 bidirectional_promoter_lncrna
 3prime_overlapping_ncrna
 transcribed_unitary_pseudogene
 translated_unprocessed_pseudogene
 Mt_tRNA
 Mt_rRNA

NONCODING:
noncoding elements after subtracting overlapping utrs, start and stop
codons and CDS from protein coding transcripts in included_three_prime_utr.five_prime_utr.start_codon.stop_codon.CDS_Mus_musculus.GRCm38.83.sortedGtfTo.bed  
to produce noncoding_proteincodingCdsStartStopUtr_removed.bed

UTRS:
utr_proteincoding_Mus_musculus.GRCm38.83.sortedGtfTo.bed produced by:

subtractBed -a included_three_prime_utr.five_prime_utr.start_codon.stop_codon.CDS_Mus_musculus.GRCm38.83.sortedGtfTo.bed -b included_start_codon.stop_codon.CDS_Mus_musculus.GRCm38.83.sortedGtfTo.bed >utr_proteincoding_Mus_musculus.GRCm38.83.sortedGtfTo.bed

PROTEIN CODING GENE BOUNDARIES:
We do,
python FilterBedWithElementList.py -i Mus_musculus.GRCm38.83.sortedGtfTo.bed -c 8 -e transcript -fkey transcript_biotype -fval protein_coding > protein_coding_transcript_boundaries.log

to generated the transcript boundaries file, included_transcript_Mus_musculus.GRCm38.83.sortedGtfTo.bed

INTRONS:
We take the transcript boundaries for protein coding genes and subtract from them all protein coding functional elements, and all noncoding elements that do not overlap with functional elements from protein coding transcripts, by doing :

subtractBed -a included_transcript_Mus_musculus.GRCm38.83.sortedGtfTo.bed -b sorted_noncoding_coding_union.bed > out

NONCODING INTRONS:
We extract entries from the gtf bed file, by parsing with awk on the 8th column, producing two files: one for noncoding ts boundaries and one for the noncoding element intervals themselves. Then, we subtract the elements from the boundaries to get putative, unfiltered noncoding introns:

subtractBed -a noncoding_ts_boundaries.bed -b noncoding_elements.bed > unfilt_noncoding_introns.bed

then we subtract all coding and noncoding elements, and all coding gene introns from this unfilt file to get noncoding introns:

subtractBed -a unfilt_noncoding_introns.bed -b sorted_intronPcode_coding_noncoding_cat.bed > filt_noncodingintrons.bed

INTERGENIC REGIONS OUTSIDE ANNOTATION BOUNDARIES
We do not need to create annotation bedfile for these, as, for any given set of contigs or read mappings to a genome, we can simply subtract all intervals in a gtf.bed from the mapped intervals to obtain those falling outside of annotations.

INTERGENIC REGIONS WITHIN ANNOTATION BOUNDARIES
We first do,

cat filt_noncodingintrons.bed sorted_intronPcode_coding_noncoding_cat.bed > all_coding_noncoding_elements_and_introns.bed

Then, we subtract a sorted version of this from the original gtf bed.
 
